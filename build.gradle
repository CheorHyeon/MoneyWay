plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.12'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.wanted'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치 지정
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // WithUserDetails 사용을 위한 시큐리티 테스트 의존성 추가
    testImplementation('org.springframework.security:spring-security-test')

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 스프링독 추가(스웨거 사용 위함)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    //querydsl
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    implementation "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0"

    implementation 'org.springframework.boot:spring-boot-starter-cache' // 스프링 캐시 추상화
    implementation 'org.springframework.boot:spring-boot-starter-data-redis' // redis 사용
}

tasks.named('test') {
    useJUnitPlatform()
}
